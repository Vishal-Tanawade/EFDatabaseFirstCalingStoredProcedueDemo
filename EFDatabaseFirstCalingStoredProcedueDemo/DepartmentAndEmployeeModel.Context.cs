//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFDatabaseFirstCalingStoredProcedueDemo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GN22ADMDNF001Entities : DbContext
    {
        public GN22ADMDNF001Entities()
            : base("name=GN22ADMDNF001Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual int SPAddEmployees(string empName, Nullable<int> deptId, Nullable<int> courseDuration)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var courseDurationParameter = courseDuration.HasValue ?
                new ObjectParameter("courseDuration", courseDuration) :
                new ObjectParameter("courseDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPAddEmployees", empNameParameter, deptIdParameter, courseDurationParameter);
        }
    
        public virtual int SPDeleteEmployee(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPDeleteEmployee", empidParameter);
        }
    
        public virtual ObjectResult<SPSelectEmployee_Result> SPSelectEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPSelectEmployee_Result>("SPSelectEmployee");
        }
    
        public virtual int SPUpdateEmployee(Nullable<int> empid, string empName, Nullable<int> deptId, Nullable<int> courseDuration)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var courseDurationParameter = courseDuration.HasValue ?
                new ObjectParameter("courseDuration", courseDuration) :
                new ObjectParameter("courseDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUpdateEmployee", empidParameter, empNameParameter, deptIdParameter, courseDurationParameter);
        }
    }
}
